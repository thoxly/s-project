// src/widgets/SupportRequestsWidget.jsx
import React, { useState, useEffect } from 'react';
import {
  Box,
  Typography,
  Button,
  Paper,
  useTheme,
  useMediaQuery,
  Menu,
  MenuItem,
  ListItemIcon,
  ListItemText,
  Divider,
  Modal,
  TextField,
  Tooltip,
} from '@mui/material';
import { useNavigate } from 'react-router-dom';
import { SupportRequestCard } from './SupportRequestCard';
import {
  HelpOutline as SupportIcon,
  SupportAgent as SupportAgentIcon,
  Build as BuildIcon,
  AttachFile as AttachFileIcon,
} from '@mui/icons-material';
// –î–æ–±–∞–≤—å—Ç–µ –≤ —Å–ø–∏—Å–æ–∫ –∏–º–ø–æ—Ä—Ç–æ–≤ –∏–∑ '@mui/material'
import {  CheckCircle as CheckCircleIcon, ErrorOutline as ErrorOutlineIcon } from '@mui/icons-material';
import {CircularProgress} from '@mui/material';
// --- –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ UUID ---
function generateSimpleUUID() {
  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
    const r = Math.random() * 16 | 0;
    const v = c === 'x' ? r : (r & 0x3 | 0x8);
    return v.toString(16);
  });
}

// --- –î–∞–Ω–Ω—ã–µ –æ —Å–µ—Ä–≤–∏—Å–∞—Ö ---
const servicesData = {
  id: 'it-support',
  title: '–ó–∞—è–≤–∫–∞ –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É',
  icon: 'MonitorCog',
  services: [
    // –ü–µ—Ä–µ–º–µ—â–∞–µ–º "admin" –≤ –Ω–∞—á–∞–ª–æ —Å–ø–∏—Å–∫–∞
    {
      id: 'admin',
      title: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –ò–°/–û–° | –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞',
      desc: '–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–∞–≤',
    },
    {
      id: 'vcs',
      title: '–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –í–ö–° –∏ –æ—á–Ω—ã—Ö —Å–æ–≤–µ—â–∞–Ω–∏–π',
      desc: '–û–Ω–ª–∞–π–Ω/–æ—á–Ω–∞—è –≤—Å—Ç—Ä–µ—á–∞',
    },
    {
      id: 'consumables',
      title: '–ó–∞–º–µ–Ω–∞ —Ä–∞—Å—Ö–æ–¥–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤',
      desc: '–¢–æ–Ω–µ—Ä, —á–µ—Ä–Ω–∏–ª–∞, –±—É–º–∞–≥–∞',
    },
    {
      id: 'software',
      title: '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è/–Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç—å –ü–û/–ò–°/–û–°',
      desc: '–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏ –ø–æ–º–æ—â—å',
    },
    {
      id: 'printer',
      title: '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ú–§–£, –ø—Ä–∏–Ω—Ç–µ—Ä–∞, —Å–∫–∞–Ω–µ—Ä–∞',
      desc: '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è',
    },
    {
      id: 'hardware',
      title: '–ê–ø–ø–∞—Ä–∞—Ç–Ω–∞—è –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç—å –æ—Ä–≥.—Ç–µ—Ö–Ω–∏–∫–∏',
      desc: '–†–µ–º–æ–Ω—Ç –∏–ª–∏ –∑–∞–º–µ–Ω–∞',
    },
    {
      id: 'storage',
      title: '–°–µ—Ç–µ–≤—ã–µ –ø–∞–ø–∫–∏/–æ–±–ª–∞—á–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ',
      desc: '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ—Å—Ç—É–ø–∞',
    },
    {
      id: 'install',
      title: '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ü–û/–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ò–°',
      desc: '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞',
    },
    {
      id: 'network',
      title: '–ù–µ–ø–æ–ª–∞–¥–∫–∏ –≤ —Å–µ—Ç–∏',
      desc: '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ, —Ä–∞–∑—Ä—ã–≤—ã',
    },
    {
      id: 'workplace',
      title: '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ / –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ —Ä–∞–±–æ—á–µ–≥–æ –º–µ—Å—Ç–∞',
      desc: '–ü–µ—Ä–µ–µ–∑–¥ –∏–ª–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞',
    },
    {
      id: 'signature',
      title: '–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ–¥–ø–∏—Å—å',
      desc: '–í—ã–ø—É—Å–∫ –∏–ª–∏ –∑–∞–º–µ–Ω–∞',
    },
    {
      id: 'secure-net',
      title: '–î–æ—Å—Ç—É–ø –≤ –∑–∞—â–∏—â–µ–Ω–Ω—É—é —Å–µ—Ç—å (VipNet)/–°–ö–ó–ò –∏ –°–ó–ò (Kaspersky, SecretNet)',
      desc: '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ—Å—Ç—É–ø–∞',
    },
    {
      id: 'other',
      title: '–î—Ä—É–≥–æ–µ',
      desc: '–ò–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã',
    },
  ],
};

// --- –ü—Ä–∏–º–µ—Ä defaultRequestContext ---
// –í–ê–ñ–ù–û: –ó–∞–º–µ–Ω–∏—Ç–µ —ç—Ç–æ—Ç –æ–±—ä–µ–∫—Ç –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π —à–∞–±–ª–æ–Ω –∑–∞—è–≤–∫–∏
const defaultRequestContext = {
  context: {
    __name:'',
    application_type: [
      {
        code: 'zno',
        name: '–ó–ù–û',
      },
    ],
    priority: [
      {
        code: 'middle',
        name: '–°—Ä–µ–¥–Ω–∏–π',
      },
    ],
    criticality: [
      {
        code: 'middle',
        name: '–°—Ä–µ–¥–Ω—è—è',
      },
    ],
    urgency: [
      {
        code: 'medium',
        name: '–°—Ä–µ–¥–Ω—è—è',
      },
    ],
    topic: '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —Å–±–æ–π –≤ 1–°:–ë—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—è, –æ—à–∏–±–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞. –°—Ä—ã–≤ —Å—Ä–æ–∫–æ–≤ –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç–∏.',
    contact_information: [
      {
        login: 'example',
        type: 'telegram',
      },
    ],
    responsible: [
      '25f18c44-3d05-4b92-8dbf-b69b4a721b53',
    ],
    service: [
      '019a2fab-8b5e-76ad-b2e3-86347f749a67',
    ],
    client_type: false,
    working_mail: [
      {
        type: 'work',
        email: 'mail@example.com',
      },
    ],
    "current_support_level": [
        "019a2f5f-9117-770d-ba20-73d528ca2155"
      ],
    table_of_sla_indicators: {
      rows: [
        {
          __id: '019a2fba-b10b-7078-a983-ab7f362e4989',
          __count: null,
          sla_level: [
            '019a2fac-abcd-70b8-9c8f-40cfedc70ea0',
          ],
          reaction_time_string: '2 —á–∞—Å–∞',
          solution_time_string: '2 —á–∞—Å–∞',
          reaction_time_seconds: 40.253,
          solution_time_seconds: null,
          reaction_time_string_fact: '40 —Å–µ–∫—É–Ω–¥',
          solution_time_string_fact: '0 –º–∏–Ω—É—Ç',
        },
      ],
      view: '',
      result: null,
    },
    sla_level: [
      '019a2fac-abcd-70b8-9c8f-40cfedc70ea0',
    ],
    id_portal: '', // –ë—É–¥–µ—Ç –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ
    aplicant: [
      '019a2f92-8bf9-737b-96e8-b218caca58c6',
    ],
    application_text: '', // –ë—É–¥–µ—Ç –ø–æ–¥—Å—Ç–∞–≤–ª—è—Ç—å—Å—è –∏–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    contact_information: [
      {
        type: 'other',
        login: 'kds+333@axonteam.ru',
      },
    ],
  },
};

const SupportRequestsWidget = () => {
  const theme = useTheme();
  const isMobile = useMediaQuery(theme.breakpoints.down('md'));
  const [requests, setRequests] = useState([]);
  const [loading, setLoading] = useState(true);

  const navigate = useNavigate();

  // --- –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ –º–µ–Ω—é ---
  const [anchorEl, setAnchorEl] = useState(null);
  const menuOpen = Boolean(anchorEl);

  // --- –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏ ---
  const [openCreate, setOpenCreate] = useState(false);
  const [description, setDescription] = useState('');
  const [isSending, setIsSending] = useState(false);

    const [sendResult, setSendResult] = useState(null); // 'success' | 'error' | null
  const [sendMessage, setSendMessage] = useState(''); // –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
  // --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –º–µ–Ω—é ---
  const handleMenuClick = (event) => {
    setAnchorEl(event.currentTarget);
  };

  const handleMenuClose = () => {
    setAnchorEl(null);
  };

  // --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ ---
  const handleOpenCreate = () => {
    setOpenCreate(true);
    handleMenuClose(); // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –º–æ–¥–∞–ª–∫–∏
  };

  const handleCloseCreate = () => {
    setOpenCreate(false);
    setDescription('');
    setIsSending(false);
    setSendResult(null); // –°–±—Ä–æ—Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    setSendMessage('');  // –°–±—Ä–æ—Å —Å–æ–æ–±—â–µ–Ω–∏—è
  };
 const handleOkAfterSuccess = () => {
    handleCloseCreate(); // –ó–∞–∫—Ä—ã–≤–∞–µ–º –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å—ë
  };
  // --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –ø—É–Ω–∫—Ç—É –º–µ–Ω—é (—Å–µ—Ä–≤–∏—Å—É) ---
  const handleServiceItemClick = (serviceId) => {
    console.log(`–í—ã–±—Ä–∞–Ω —Å–µ—Ä–≤–∏—Å: ${serviceId}`);
    if (serviceId === 'admin') {
      handleOpenCreate(); // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è "admin"
    } else {
      // –î–ª—è –¥—Ä—É–≥–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏–ª–∏ –∑–∞–≥–ª—É—à–∫—É
      const serviceName = servicesData.services.find((s) => s.id === serviceId)?.title || serviceId;
      alert(
        `–í—ã –≤—ã–±—Ä–∞–ª–∏: ${serviceName}\n(–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ –≤ –¥–µ–º–æ-–≤–µ—Ä—Å–∏–∏)`
      );
      handleMenuClose(); // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é
    }
  };

  // --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç—å" –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ ---
  const handleSubmit = () => {
    alert('–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ –≤ –¥–µ–º–æ-–≤–µ—Ä—Å–∏–∏');
    handleCloseCreate();
  };

  // --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–û—Ç–ø—Ä–∞–≤–∏—Ç—å" –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ ---
  const handleSend = async () => {
  if (!description.trim()) {
    // –í–º–µ—Å—Ç–æ alert, –ø–æ–∫–∞–∂–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –º–æ–¥–∞–ª–∫–µ
    setSendResult('error');
    setSendMessage('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ.');
    return;
  }

  setIsSending(true);
  setSendResult(null); // –°–±—Ä–æ—Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–µ—Ä–µ–¥ –Ω–æ–≤–æ–π –æ—Ç–ø—Ä–∞–≤–∫–æ–π
  setSendMessage('');  // –°–±—Ä–æ—Å —Å–æ–æ–±—â–µ–Ω–∏—è

  try {
    // --- 1. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è —ç—Ç–æ–π –∑–∞—è–≤–∫–∏ ---
    const requestId = generateSimpleUUID();

    // --- 2. –§–æ—Ä–º–∏—Ä—É–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏ –≤–∏–¥–∞ SD-XXXXXX ---
    const ticketNumber = 'SD-' + requestId.split('-')[0].substring(0, 6).toUpperCase();

    // --- 3. –°–æ–∑–¥–∞—ë–º –∫–æ–ø–∏—é –æ–±—ä–µ–∫—Ç–∞ –∏ –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ, ID –∏ __name ---
    const requestToSend = {
      ...defaultRequestContext,
      context: {
        ...defaultRequestContext.context,
        __name: ticketNumber,        // ‚Üê –ü–æ–¥—Å—Ç–∞–≤–ª—è–µ–º —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–º—è
        application_text: description, // –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∏–∑ –ø–æ–ª—è "–û–ø–∏—Å–∞–Ω–∏–µ"
        id_portal: requestId,         // –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID
      },
    };

    console.log('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä:', requestToSend);

    // --- 4. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä ---
    const serverResponse = await fetch('/api/elma/post_application', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(requestToSend),
    });

    if (!serverResponse.ok) {
      const errorText = await serverResponse.text();
      throw new Error(
        `–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: ${serverResponse.status} ${serverResponse.statusText}. ${errorText}`
      );
    }

    const serverResult = await serverResponse.json();
    console.log('‚úÖ –ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä:', serverResult);

    // --- 5. –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage ---
    const existingApplications = JSON.parse(localStorage.getItem('applications') || '[]');
    existingApplications.push({
      ...requestToSend,
      sentAt: new Date().toISOString(), // –î–æ–±–∞–≤–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –º–µ—Ç–∫—É
    });
    localStorage.setItem('applications', JSON.stringify(existingApplications));

    console.log('üíæ –ó–∞—è–≤–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ localStorage');

    // --- 6. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ø–µ—Ö ---
    setSendResult('success');
    setSendMessage(`–ó–∞—è–≤–∫–∞ ${ticketNumber} —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!`);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞—è–≤–∫–∏:', error);
    // --- –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É ---
    setSendResult('error');
    setSendMessage('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏.');
  } finally {
    setIsSending(false);
  }
};

  // --- –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞—è–≤–æ–∫ –∏–∑ localStorage –∏ –ø–æ–ª–ª–∏–Ω–≥–∞ ---
  useEffect(() => {
    let loadTimerId;
    let pollIntervalId;

    const fetchStatusUpdates = async () => {
      try {
        console.log('üîÅ –ó–∞–ø—Ä–æ—Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π —Å—Ç–∞—Ç—É—Å–∞ —É —Å–µ—Ä–≤–µ—Ä–∞...');
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π URL, –≤–æ–∑–º–æ–∂–Ω–æ, —Å proxy
        const response = await fetch('https://api-surius.ru.tuna.am/api/elma/check_status', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          // body: JSON.stringify({ action: 'getStatusUpdates' }), // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ
        });

        if (!response.ok) {
          console.warn(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ —Å—Ç–∞—Ç—É—Å–∞: ${response.status} ${response.statusText}`);
          return;
        }

        const statusUpdatesArray = await response.json();
        console.log('üì• –ü–æ–ª—É—á–µ–Ω—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', statusUpdatesArray);

        if (Array.isArray(statusUpdatesArray) && statusUpdatesArray.length > 0) {
          setRequests((prevRequests) => {
            let hasChanges = false;
            const updatedRequests = [...prevRequests];
            let storedApplications = JSON.parse(localStorage.getItem('applications') || '[]');
            let localStorageUpdated = false;

            statusUpdatesArray.forEach((update) => {
              const { id: serverId, status: newStatus } = update;

              if (serverId && newStatus !== undefined) {
                const indexToUpdate = updatedRequests.findIndex((req) => req.id === serverId);

                if (
                  indexToUpdate !== -1 &&
                  updatedRequests[indexToUpdate].status !== newStatus
                ) {
                  console.log(
                    `üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –¥–ª—è –∑–∞—è–≤–∫–∏ ${serverId}: ${updatedRequests[indexToUpdate].status} -> ${newStatus}`
                  );
                  updatedRequests[indexToUpdate] = {
                    ...updatedRequests[indexToUpdate],
                    status: newStatus,
                  };
                  hasChanges = true;

                  const storageIndexToUpdate = storedApplications.findIndex(
                    (item) => item.context?.id_portal === serverId
                  );
                  if (storageIndexToUpdate !== -1) {
                    storedApplications[storageIndexToUpdate].currentStatus = newStatus;
                    localStorageUpdated = true;
                  }
                }
              }
            });

            if (hasChanges) {
              if (localStorageUpdated) {
                try {
                  localStorage.setItem('applications', JSON.stringify(storedApplications));
                  console.log('üíæ –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞—è–≤–æ–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ localStorage.');
                } catch (e) {
                  console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –≤ localStorage:', e);
                }
              }
              return updatedRequests;
            }
            return prevRequests;
          });
        } else {
          console.log(
            '‚ÑπÔ∏è –°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –∏–ª–∏ –Ω–µ –º–∞—Å—Å–∏–≤. –ù–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π —Å—Ç–∞—Ç—É—Å–∞.'
          );
        }
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏/–æ–±—Ä–∞–±–æ—Ç–∫–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π —Å—Ç–∞—Ç—É—Å–∞ —á–µ—Ä–µ–∑ –ø–æ–ª–ª–∏–Ω–≥:', error);
      }
    };

    loadTimerId = setTimeout(() => {
      try {
        console.log('üìÇ –ó–∞–≥—Ä—É–∑–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∑–∞—è–≤–æ–∫ –∏–∑ localStorage...');
        const storedRequestsRaw = localStorage.getItem('applications');
        let storedRequests = [];

        if (storedRequestsRaw) {
          try {
            storedRequests = JSON.parse(storedRequestsRaw);
            console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ ${storedRequests.length} –∑–∞—è–≤–æ–∫ –∏–∑ localStorage.`);
          } catch (parseError) {
            console.error('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ localStorage:', parseError);
            storedRequests = [];
          }
        }

        const formattedRequests = storedRequests.map((storageItem) => {
          const context = storageItem.context || {};
          const appId = context.id_portal || generateSimpleUUID();
          const initialStatus = storageItem.currentStatus || '–ù–æ–≤–∞—è';

          return {
            id: appId,
            ticketNumber: 'SD-' + appId.split('-')[0].substring(0, 6).toUpperCase(),
            createdAt: storageItem.sentAt || new Date().toISOString(),
            type: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –ò–°/–û–° | –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞',
            description: context.application_text || '–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç',
            status: initialStatus,
            assignee: '‚Äî',
          };
        });

        setRequests(formattedRequests);
        console.log(`üì¶ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ ${formattedRequests.length} –∑–∞—è–≤–æ–∫ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞.`);
      } catch (error) {
        console.error('üí• –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∑–∞—è–≤–æ–∫ –∏–∑ localStorage:', error);
        setRequests([]);
      } finally {
        setLoading(false);
        console.log('üèÅ –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.');
      }

      console.log('üì° –ó–∞–ø—É—Å–∫ –ø–æ–ª–ª–∏–Ω–≥–∞ —Å—Ç–∞—Ç—É—Å–∞ (/api/elma/check_status) –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥...');
      fetchStatusUpdates();
      pollIntervalId = setInterval(() => {
        console.log('üîÅ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ —Å—Ç–∞—Ç—É—Å–∞...');
        fetchStatusUpdates();
      }, 10000); // –ö–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥

    }, 500); // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏

    return () => {
      console.log('üßπ –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞...');
      if (loadTimerId) {
        clearTimeout(loadTimerId);
        console.log('‚è±Ô∏è –¢–∞–π–º–µ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ –æ—á–∏—â–µ–Ω.');
      }
      if (pollIntervalId) {
        clearInterval(pollIntervalId);
        console.log('‚è∞ –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø–æ–ª–ª–∏–Ω–≥–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.');
      }
    };
  }, []); // –ü—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π - —ç—Ñ—Ñ–µ–∫—Ç –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏

  if (loading) {
    return (
      <Box
        display="flex"
        justifyContent="center"
        alignItems="center"
        minHeight={isMobile ? '80px' : '100px'}
      >
        <Typography variant={isMobile ? 'body2' : 'body1'}>–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞—è–≤–æ–∫...</Typography>
      </Box>
    );
  }

  return (
    <Box>
      {/* –ö–Ω–æ–ø–∫–∞ "+ –ó–∞—è–≤–∫–∞" –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç */}
      
        <Box sx={{ display: 'flex', justifyContent: 'flex-start', mb: 2 }}>
          <div>
            <Button
              variant="contained"
              size={isMobile ? 'small' : 'medium'}
              onClick={handleMenuClick} // –û—Ç–∫—Ä—ã–≤–∞–µ—Ç –º–µ–Ω—é
              sx={{
                borderRadius: { xs: 1.5, sm: 2 },
                textTransform: 'none',
                fontWeight: 500,
                fontSize: { xs: '0.8rem', sm: '0.875rem' },
                py: { xs: 0.75, sm: 1 },
                '&:hover': {
                  backgroundColor: 'primary.dark',
                  transform: isMobile ? 'none' : 'translateY(-1px)',
                  boxShadow: '0 4px 8px rgba(30, 58, 138, 0.2)',
                },
              }}
            >
              + –ó–∞—è–≤–∫–∞
            </Button>

            {/* --- –í—ã–ø–∞–¥–∞—é—â–µ–µ –º–µ–Ω—é —Å–æ —Å–ø–∏—Å–∫–æ–º –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ --- */}
             <Menu
              anchorEl={anchorEl}
              open={menuOpen}
              onClose={handleMenuClose}
              onClick={handleMenuClose}
              // --- –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è ---
              anchorOrigin={{
                vertical: 'top',    // –í–µ—Ä—Ö –∫–Ω–æ–ø–∫–∏
                horizontal: 'right', // –ü—Ä–∞–≤—ã–π –∫—Ä–∞–π –∫–Ω–æ–ø–∫–∏
              }}
              transformOrigin={{
                vertical: 'top',    // –í–µ—Ä—Ö –º–µ–Ω—é
                horizontal: 'left', // –õ–µ–≤—ã–π –∫—Ä–∞–π –º–µ–Ω—é
              }}
              // ---------------------------------------------
              PaperProps={{
                elevation: 4,
                sx: {
                  borderRadius: 2,
                  maxHeight: '70vh',
                  overflowY: 'auto',
                  mt: 0.5, // –ù–µ–±–æ–ª—å—à–æ–π –æ—Ç—Å—Ç—É–ø —Å–≤–µ—Ä—Ö—É, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–∏–ª–∏–ø–∞–ª–æ –≤–ø–ª–æ—Ç–Ω—É—é
                  mr: 0.5, // –ù–µ–±–æ–ª—å—à–æ–π –æ—Ç—Å—Ç—É–ø —Å–ø—Ä–∞–≤–∞, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                },
              }}
            >
              {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –º–µ–Ω—é */}
              <MenuItem disabled>
                <ListItemText
                  primary={servicesData.title}
                  primaryTypographyProps={{ fontWeight: 'bold' }}
                />
              </MenuItem>
              <Divider />

              {/* –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–µ–º –ø—É–Ω–∫—Ç—ã –º–µ–Ω—é –∏–∑ servicesData.services */}
              {servicesData.services.map((service) => (
                <MenuItem
                  key={service.id}
                  onClick={(e) => {
                    e.stopPropagation();
                    handleServiceItemClick(service.id);
                  }}
                  sx={{ py: 1 }}
                >
                  <ListItemIcon>
                    {service.id === 'admin' ? (
                      <SupportAgentIcon fontSize="small" color="primary" />
                    ) : (
                      <BuildIcon fontSize="small" />
                    )}
                  </ListItemIcon>
                  <ListItemText
                    primary={service.title}
                    secondary={service.desc}
                    primaryTypographyProps={{
                      fontWeight: service.id === 'admin' ? 600 : 500,
                    }}
                    secondaryTypographyProps={{ variant: 'caption', color: 'text.secondary' }}
                  />
                </MenuItem>
              ))}
            </Menu>
          </div>
        </Box>

      <Modal open={openCreate} onClose={handleCloseCreate}>
        <Box
          sx={{
            // --- –°—Ç–∏–ª–∏ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —Ä–∞–∑–º–µ—Ä–∞ ---
            position: 'absolute',
            top: '50%',
            left: '50%',
            transform: 'translate(-50%, -50%)',
            width: { xs: '90%', sm: 400 }, // –ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è —à–∏—Ä–∏–Ω–∞
            // --- –°—Ç–∏–ª–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è ---
            bgcolor: 'background.paper',
            borderRadius: 2,
            boxShadow: 24,
            p: 3,
            maxHeight: '90vh',
            overflowY: 'auto', // –°–∫—Ä–æ–ª–ª –≤–Ω—É—Ç—Ä–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
          }}
        >
          {/* --- –£—Å–ª–æ–≤–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥: —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ —Ñ–æ—Ä–º–∞ --- */}
          {sendResult === 'success' || sendResult === 'error' ? (
            // --- –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ ---
            <Box sx={{ textAlign: 'center', py: 2 }}>
              {sendResult === 'success' ? (
                <Box sx={{ color: 'success.main', mb: 2 }}>
                  <CheckCircleIcon sx={{ fontSize: 60, mb: 1 }} />
                  <Typography variant="h6" sx={{ fontWeight: 600 }}>
                    –£—Å–ø–µ—à–Ω–æ!
                  </Typography>
                </Box>
              ) : (
                <Box sx={{ color: 'error.main', mb: 2 }}>
                  <ErrorOutlineIcon sx={{ fontSize: 60, mb: 1 }} />
                  <Typography variant="h6" sx={{ fontWeight: 600 }}>
                    –û—à–∏–±–∫–∞
                  </Typography>
                </Box>
              )}
              <Typography variant="body1" sx={{ mb: 3 }}>
                {sendMessage}
              </Typography>
              <Button
                variant="contained"
                onClick={sendResult === 'success' ? handleOkAfterSuccess : handleCloseCreate}
                sx={{
                  color: 'white',
                  backgroundColor: sendResult === 'success' ? 'success.main' : 'error.main',
                  '&:hover': {
                    backgroundColor: sendResult === 'success' ? 'success.dark' : 'error.dark',
                  },
                }}
              >
                OK
              </Button>
            </Box>
          ) : isSending ? (
            // --- –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ø–∏–Ω–Ω–µ—Ä–∞ –≤–æ –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏ ---
            <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', py: 4 }}>
              <CircularProgress size={40} sx={{ mb: 2 }} />
              <Typography variant="body1">–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏...</Typography>
            </Box>
          ) : (
            // --- –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã –≤–≤–æ–¥–∞ ---
            <>
              <Typography sx={{ padding: '0 0 8px 0' }} variant="h6" fontWeight={600} gutterBottom>
                –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –ò–°/–û–° | –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
              </Typography>
              <TextField
                label="–û–ø–∏—Å–∞–Ω–∏–µ"
                multiline
                rows={4}
                fullWidth
                value={description}
                onChange={(e) => setDescription(e.target.value)}
                sx={{ mb: 2 }}
              />
              <Divider sx={{ my: 2 }} />
              <Box
                sx={{
                  display: 'flex',
                  flexDirection: 'column',
                  alignItems: 'flex-start',
                  gap: 1,
                }}
              >
                <Tooltip title="–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ –≤ –¥–µ–º–æ-–≤–µ—Ä—Å–∏–∏" arrow>
                  <Button
                    variant="outlined"
                    startIcon={<AttachFileIcon />}
                    onClick={handleSubmit}
                    sx={{
                      color: 'text.primary',
                      borderColor: 'grey.400',
                      '&:hover': {
                        backgroundColor: 'grey.50',
                        borderColor: 'grey.500',
                      },
                    }}
                  >
                    –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç—å
                  </Button>
                </Tooltip>
                <Box
                  sx={{
                    display: 'flex',
                    justifyContent: 'flex-end',
                    gap: 1,
                    width: '100%',
                    mt: 1,
                  }}
                >
                  <Button onClick={handleCloseCreate} disabled={isSending}>
                    –û—Ç–º–µ–Ω–∞
                  </Button>
                  <Button
                    variant="contained"
                    onClick={handleSend}
                    disabled={isSending || !description.trim()}
                    sx={{
                      color: 'white',
                      backgroundColor: 'primary.main',
                      '&:hover': {
                        backgroundColor: 'primary.dark',
                      },
                    }}
                  >
                    –û—Ç–ø—Ä–∞–≤–∏—Ç—å
                  </Button>
                </Box>
              </Box>
            </>
          )}
        </Box>
      </Modal>

      {/* –°–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫ –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ "–ø—É—Å—Ç–æ" */}
      {requests.length > 0 ? (
        <Box>
          {requests.map((request) => (
            <SupportRequestCard
              key={request.id}
              request={request}
              onClick={() => {
                alert('–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ –≤ –¥–µ–º–æ-–≤–µ—Ä—Å–∏–∏');
              }}
            />
          ))}
        </Box>
      ) : (
        <Paper
          variant="outlined"
          sx={{
            p: { xs: 2, sm: 3 },
            textAlign: 'center',
            border: '1px dashed',
            borderColor: 'grey.400',
            backgroundColor: 'rgba(245, 245, 245, 0.3)',
            borderRadius: { xs: 1.5, sm: 2 },
          }}
        >
          <Typography variant="body2" color="text.secondary">
            –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞—è–≤–æ–∫ –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É
          </Typography>
        </Paper>
      )}
    </Box>
  );
};

export default SupportRequestsWidget;