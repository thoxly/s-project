import React, { useState, useEffect } from 'react';
import {
  Box,
  Typography,
  Button,
  Paper,
  useTheme,
  useMediaQuery,
  Menu,
  MenuItem,
  ListItemIcon,
  ListItemText,
} from '@mui/material';
import { useNavigate } from 'react-router-dom';
import { SupportRequestCard } from './SupportRequestCard'; // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—É—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π
import { HelpOutline as SupportIcon, SupportAgent as SupportAgentIcon } from '@mui/icons-material';

// --- –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ UUID (–µ—Å–ª–∏ uuid –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è) ---
// –ï—Å–ª–∏ –≤—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –±–∏–±–ª–∏–æ—Ç–µ–∫—É uuid, —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å
function generateSimpleUUID() {
  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
    const r = Math.random() * 16 | 0;
    const v = c === 'x' ? r : (r & 0x3 | 0x8);
    return v.toString(16);
  });
}

const SupportRequestsWidget = () => {
  const theme = useTheme();
  const isMobile = useMediaQuery(theme.breakpoints.down('md'));
  const [requests, setRequests] = useState([]);
  const [loading, setLoading] = useState(true);
  let status_elems=[]
  const navigate = useNavigate();

  const [anchorEl, setAnchorEl] = useState(null);
  const open = Boolean(anchorEl);


  const handleClick = (event) => {
    setAnchorEl(event.currentTarget);
  };

  const handleClose = () => {
    setAnchorEl(null);
  };

  const handleMenuItemClick = () => {
    navigate('/services');
    handleClose();
  };

  const fetchStatus = async () => {
    try {
      const response = await fetch('http://localhost:3000/api/elma/check_status', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        // –ï—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä —Ç—Ä–µ–±—É–µ—Ç —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞, –¥–æ–±–∞–≤—å—Ç–µ –µ–≥–æ –∑–¥–µ—Å—å
        // body: JSON.stringify({ /* –¥–∞–Ω–Ω—ã–µ, –µ—Å–ª–∏ –Ω—É–∂–Ω—ã */ }),
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const statusData = await response.json();
      console.log('–ü–æ–ª—É—á–µ–Ω —Å—Ç–∞—Ç—É—Å –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', statusData);
      status_elems=statusData
      // --- –ó–¥–µ—Å—å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ ---
      // –ù–∞–ø—Ä–∏–º–µ—Ä, –æ–±–Ω–æ–≤–∏—Ç–µ –¥—Ä—É–≥–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –µ—Å–ª–∏ statusData —á—Ç–æ-—Ç–æ –≤–ª–∏—è–µ—Ç –Ω–∞ UI
      // –î–ª—è –ø—Ä–∏–º–µ—Ä–∞ –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º
      // setSomeStatusState(statusData); 

    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞:', error);
      // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –ø–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    }
  };
  
  // --- –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞—è–≤–æ–∫ –∏–∑ localStorage ---
  useEffect(() => {
    let loadTimerId; // ID —Ç–∞–π–º–µ—Ä–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ localStorage
    let pollIntervalId; // ID –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –ø–æ–ª–ª–∏–Ω–≥–∞

    // --- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π —Å—Ç–∞—Ç—É—Å–∞ —Å —Å–µ—Ä–≤–µ—Ä–∞ ---
    const fetchStatusUpdates = async () => {
      try {
        console.log('üîÅ –ó–∞–ø—Ä–æ—Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π —Å—Ç–∞—Ç—É—Å–∞ —É —Å–µ—Ä–≤–µ—Ä–∞...');
        // --- 1. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST-–∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–Ω—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç ---
        const response = await fetch('/api/elma/check_status', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          // –î–æ–±–∞–≤—å—Ç–µ —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞, –µ—Å–ª–∏ –æ–Ω–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è —Å–µ—Ä–≤–µ—Ä–æ–º
          // body: JSON.stringify({ action: 'getStatusUpdates' }),
        });

        if (!response.ok) {
          console.warn(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ —Å—Ç–∞—Ç—É—Å–∞: ${response.status} ${response.statusText}`);
          return;
        }

        // --- 2. –ü–∞—Ä—Å–∏–º JSON-–æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ ---
        const statusUpdatesArray = await response.json();
        console.log('üì• –ü–æ–ª—É—á–µ–Ω—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', statusUpdatesArray);

        // --- 3. –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è ---
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Ç–≤–µ—Ç - —ç—Ç–æ –º–∞—Å—Å–∏–≤
        if (Array.isArray(statusUpdatesArray) && statusUpdatesArray.length > 0) {
          
          // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ `requests`, –∏—Å–ø–æ–ª—å–∑—É—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Å–ø–æ—Å–æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
          setRequests(prevRequests => {
            // –§–ª–∞–≥, —á—Ç–æ–±—ã –æ—Ç—Å–ª–µ–¥–∏—Ç—å, –±—ã–ª–∏ –ª–∏ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
            let hasChanges = false;

            // –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è, –∫–æ—Ç–æ—Ä—É—é –±—É–¥–µ–º –º—É—Ç–∏—Ä–æ–≤–∞—Ç—å
            const updatedRequests = [...prevRequests];

            // –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –∫–∞–∂–¥–æ–º—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—é —Å—Ç–∞—Ç—É—Å–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
            statusUpdatesArray.forEach(update => {
              // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –ø—Ä–∏—Å—ã–ª–∞–µ—Ç –æ–±—ä–µ–∫—Ç —Å –ø–æ–ª—è–º–∏ { id: '...', status: '...' }
              // –≥–¥–µ `id` - —ç—Ç–æ ID, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç `id_portal` –≤ localStorage/context
              const { id: serverId, status: newStatus } = update;

              if (serverId && newStatus !== undefined) {
                // –ù–∞—Ö–æ–¥–∏–º –∏–Ω–¥–µ–∫—Å –∑–∞—è–≤–∫–∏ –≤ –Ω–∞—à–µ–º —Ç–µ–∫—É—â–µ–º –º–∞—Å—Å–∏–≤–µ –ø–æ serverId (–∫–æ—Ç–æ—Ä—ã–π = id_portal)
                const indexToUpdate = updatedRequests.findIndex(req => req.id === serverId);

                // –ï—Å–ª–∏ –∑–∞—è–≤–∫–∞ –Ω–∞–π–¥–µ–Ω–∞ –∏ –µ—ë —Å—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–∏–ª—Å—è
                if (indexToUpdate !== -1 && updatedRequests[indexToUpdate].status !== newStatus) {
                  console.log(`üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –¥–ª—è –∑–∞—è–≤–∫–∏ ${serverId}: ${updatedRequests[indexToUpdate].status} -> ${newStatus}`);
                  
                  // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç –∑–∞—è–≤–∫–∏ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º —Å—Ç–∞—Ç—É—Å–æ–º
                  updatedRequests[indexToUpdate] = {
                    ...updatedRequests[indexToUpdate],
                    status: newStatus,
                  };
                  hasChanges = true; // –û—Ç–º–µ—á–∞–µ–º, —á—Ç–æ –±—ã–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
                }
              }
            });

            // –ï—Å–ª–∏ –±—ã–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ (–ø—Ä–æ–≤–æ—Ü–∏—Ä—É–µ—Ç —Ä–µ—Ä–µ–Ω–¥–µ—Ä)
            // –ï—Å–ª–∏ –Ω–µ—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –º–∞—Å—Å–∏–≤ (React –Ω–µ –ø–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏—Ç)
            return hasChanges ? updatedRequests : prevRequests;
          });
        } else {
          console.log("‚ÑπÔ∏è –°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –∏–ª–∏ –Ω–µ –º–∞—Å—Å–∏–≤. –ù–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π —Å—Ç–∞—Ç—É—Å–∞.");
        }

      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏/–æ–±—Ä–∞–±–æ—Ç–∫–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π —Å—Ç–∞—Ç—É—Å–∞ —á–µ—Ä–µ–∑ –ø–æ–ª–ª–∏–Ω–≥:', error);
      }
    };

    // --- 1. –ù–∞—á–∞–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ localStorage ---
    loadTimerId = setTimeout(() => {
      try {
        console.log('üìÇ –ó–∞–≥—Ä—É–∑–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∑–∞—è–≤–æ–∫ –∏–∑ localStorage...');
        const storedRequestsRaw = localStorage.getItem('applications');
        let storedRequests = [];

        if (storedRequestsRaw) {
          try {
            storedRequests = JSON.parse(storedRequestsRaw);
            console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ ${storedRequests.length} –∑–∞—è–≤–æ–∫ –∏–∑ localStorage.`);
          } catch (parseError) {
            console.error('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ localStorage:', parseError);
            storedRequests = []; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º, –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω—ã
          }
        }

        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ localStorage (–º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ —Å –ø–æ–ª–µ–º context) 
        // –≤ —Ñ–æ—Ä–º–∞—Ç, –æ–∂–∏–¥–∞–µ–º—ã–π SupportRequestCard
        const formattedRequests = storedRequests.map(storageItem => {
          // storageItem - —ç—Ç–æ –æ–±—ä–µ–∫—Ç { context: {...}, sentAt: "..." }
          const context = storageItem.context || {};
          const appId = context.id_portal || generateSimpleUUID(); // –ò—Å–ø–æ–ª—å–∑—É–µ–º id_portal –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–π ID

          return {
            id: appId, // –ö–ª—é—á–µ–≤–æ–µ –ø–æ–ª–µ –¥–ª—è —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è!
            ticketNumber: 'SD-' + appId.split('-')[0].substring(0, 6).toUpperCase(), // –ü—Ä–∏–º–µ—Ä: SD-A1B2C3
            createdAt: storageItem.sentAt || new Date().toISOString(), // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞—Ç—É –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–∑ LS
            initiator: '–î–µ–º–æ-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', // –ó–∞—Ö–∞—Ä–¥–∫–æ–∂–µ–Ω–æ, –∫–∞–∫ –≤ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è—Ö
            type: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –ò–°/–û–° | –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞', // –ó–∞—Ö–∞—Ä–¥–∫–æ–∂–µ–Ω–æ
            description: context.application_text || '–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç', // –ò–∑ —Ç–µ–∫—Å—Ç–∞ —Ñ–æ—Ä–º—ã
            status: '–ù–æ–≤–∞—è', // –ù–∞—á–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å –¥–ª—è –Ω–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫ –∏–∑ LS
            assignee: '‚Äî', // –ü–æ–∫–∞ –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω
            // rawContext: context // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –≤–∏–¥–µ—Ç—å –≤–µ—Å—å –∫–æ–Ω—Ç–µ–∫—Å—Ç
          };
        });

        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ React
        setRequests(formattedRequests);
        console.log(`üì¶ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ ${formattedRequests.length} –∑–∞—è–≤–æ–∫ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞.`);
      } catch (error) {
        console.error('üí• –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∑–∞—è–≤–æ–∫ –∏–∑ localStorage:', error);
        setRequests([]); // –ù–∞ —Å–ª—É—á–∞–π –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–æ–π –æ—à–∏–±–∫–∏
      } finally {
        setLoading(false); // –ó–∞–≤–µ—Ä—à–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        console.log('üèÅ –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.');
      }

      // --- 2. –ó–∞–ø—É—Å–∫ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–ª–ª–∏–Ω–≥–∞ ---
      console.log('üì° –ó–∞–ø—É—Å–∫ –ø–æ–ª–ª–∏–Ω–≥–∞ —Å—Ç–∞—Ç—É—Å–∞ (/api/elma/check_status) –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥...');
      // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
      fetchStatusUpdates();

      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª—è –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
      pollIntervalId = setInterval(() => {
        console.log('üîÅ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ —Å—Ç–∞—Ç—É—Å–∞...');
        fetchStatusUpdates();
      }, 10000); // –ò–Ω—Ç–µ—Ä–≤–∞–ª –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö (10 —Å–µ–∫—É–Ω–¥)

    }, 500); // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏ (–º–æ–∂–Ω–æ —É–±—Ä–∞—Ç—å)

    // --- –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏, –≤—ã–∑—ã–≤–∞–µ–º–∞—è –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ ---
    return () => {
      console.log('üßπ –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞...');
      if (loadTimerId) {
        clearTimeout(loadTimerId);
        console.log('‚è±Ô∏è –¢–∞–π–º–µ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ –æ—á–∏—â–µ–Ω.');
      }
      if (pollIntervalId) {
        clearInterval(pollIntervalId);
        console.log('‚è∞ –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø–æ–ª–ª–∏–Ω–≥–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.');
      }
    };
  }, []);


  if (loading) {
    return (
      <Box display="flex" justifyContent="center" alignItems="center" minHeight={isMobile ? '80px' : '100px'}>
        <Typography variant={isMobile ? 'body2' : 'body1'}>–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞—è–≤–æ–∫...</Typography>
      </Box>
    );
  }

  return (
    <Box>
      {/* –ö–Ω–æ–ø–∫–∞ "+ –ó–∞—è–≤–∫–∞" –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç */}
      {requests.length === 0 && (
        <Box sx={{ display: 'flex', justifyContent: 'flex-start', mb: 2 }}>
          <div>
            <Button
              variant="contained"
              size={isMobile ? 'small' : 'medium'}
              onClick={handleClick}
              sx={{
                borderRadius: { xs: 1.5, sm: 2 },
                textTransform: 'none',
                fontWeight: 500,
                fontSize: { xs: '0.8rem', sm: '0.875rem' },
                py: { xs: 0.75, sm: 1 },
                '&:hover': {
                  backgroundColor: 'primary.dark',
                  transform: isMobile ? 'none' : 'translateY(-1px)',
                  boxShadow: '0 4px 8px rgba(30, 58, 138, 0.2)',
                },
              }}
            >
              + –ó–∞—è–≤–∫–∞
            </Button>
            <Menu
              anchorEl={anchorEl}
              open={open}
              onClose={handleClose}
              onClick={handleClose}
              PaperProps={{
                elevation: 4,
                sx: { borderRadius: 2 },
              }}
              transformOrigin={{ horizontal: 'left', vertical: 'top' }}
              anchorOrigin={{ horizontal: 'left', vertical: 'bottom' }}
            >
              <MenuItem onClick={handleMenuItemClick}>
                <ListItemIcon>
                  <SupportAgentIcon fontSize="small" />
                </ListItemIcon>
                <ListItemText primary="–ó–∞—è–≤–∫–∞ –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É" />
              </MenuItem>
            </Menu>
          </div>
        </Box>
      )}

      {/* –°–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫ –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ "–ø—É—Å—Ç–æ" */}
      {requests.length > 0 ? (
        <Box>
          {requests.map((request) => (
            <SupportRequestCard
              key={request.id} // –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –∏–∑ –∑–∞—è–≤–∫–∏
              request={request}
              onClick={() => {
                // –í –¥–µ–º–æ ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                alert('–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ –≤ –¥–µ–º–æ-–≤–µ—Ä—Å–∏–∏');
              }}
            />
          ))}
        </Box>
      ) : (
        <Paper
          variant="outlined"
          sx={{
            p: { xs: 2, sm: 3 },
            textAlign: 'center',
            border: '1px dashed',
            borderColor: 'grey.400',
            backgroundColor: 'rgba(245, 245, 245, 0.3)',
            borderRadius: { xs: 1.5, sm: 2 },
          }}
        >
          <Typography variant="body2" color="text.secondary">
            –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞—è–≤–æ–∫ –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É
          </Typography>
        </Paper>
      )}
    </Box>
  );
};

export default SupportRequestsWidget;