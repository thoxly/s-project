// src/components/ServiceCard.jsx
import React, { useState } from 'react';
import {
  Card,
  CardContent,
  Typography,
  Box,
  Button,
  Modal,
  TextField,
  Divider,
  Tooltip,
  CircularProgress,
} from '@mui/material';
import { useSortable } from '@dnd-kit/sortable';
import { CSS } from '@dnd-kit/utilities';
import { AttachFile as AttachFileIcon, CheckCircle as CheckCircleIcon, ErrorOutline as ErrorOutlineIcon } from '@mui/icons-material';

const ServiceCard = ({ id, title, desc, category }) => {
  const [openDetail, setOpenDetail] = useState(false); // ‚Üê –º–æ–¥–∞–ª–∫–∞ "–ü–æ–¥—Ä–æ–±–Ω–µ–µ"
  const [openCreate, setOpenCreate] = useState(false); // ‚Üê –º–æ–¥–∞–ª–∫–∞ "–°–æ–∑–¥–∞—Ç—å" (—Ç–æ–ª—å–∫–æ –¥–ª—è admin)
  const [description, setDescription] = useState('');   // ‚Üê —Ç–µ–∫—Å—Ç –≤ –ø–æ–ª–µ "–û–ø–∏—Å–∞–Ω–∏–µ"
  const [isSending, setIsSending] = useState(false);   // ‚Üê —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
  // --- –ù–æ–≤—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ ---
  const [sendResult, setSendResult] = useState(null); // 'success' | 'error' | null
  const [sendMessage, setSendMessage] = useState(''); // –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –º–æ–¥–∞–ª–∫–∏ "–ü–æ–¥—Ä–æ–±–Ω–µ–µ"
  const handleOpenDetail = () => setOpenDetail(true);
  const handleCloseDetail = () => setOpenDetail(false);

  // --- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ UUID v4 ---
  function generateUUIDv4() {
    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
      const r = Math.random() * 16 | 0;
      const v = c === 'x' ? r : (r & 0x3 | 0x8);
      return v.toString(16);
    });
  }

  // --- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ ticketNumber –≤ —Ñ–æ—Ä–º–∞—Ç–µ SD-... ---
  function generateTicketNumber(uuid) {
    return 'SD-' + uuid.split('-')[0].substring(0, 6).toUpperCase();
  }

  // --- –î–µ—Ñ–æ–ª—Ç–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –∑–∞—è–≤–∫–∏ ---
  const defaultRequestContext = {
    "context": {
      "__name": "", // <-- –ü—É—Å—Ç–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –±—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–æ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
      "application_type": [
        {
          "code": "zno",
          "name": "–ó–ù–û"
        }
      ],
      "priority": [
        {
          "code": "middle",
          "name": "–°—Ä–µ–¥–Ω–∏–π"
        }
      ],
      "criticality": [
        {
          "code": "middle",
          "name": "–°—Ä–µ–¥–Ω—è—è"
        }
      ],
      "urgency": [
        {
          "code": "medium",
          "name": "–°—Ä–µ–¥–Ω—è—è"
        }
      ],
      "topic": "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —Å–±–æ–π –≤ 1–°:–ë—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—è, –æ—à–∏–±–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞. –°—Ä—ã–≤ —Å—Ä–æ–∫–æ–≤ –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç–∏.",
      "contact_information": [
        {
          "login": "example",
          "type": "telegram"
        }
      ],
      "responsible": [
        "25f18c44-3d05-4b92-8dbf-b69b4a721b53"
      ],
      "service": [
        "019a2fab-8b5e-76ad-b2e3-86347f749a67"
      ],
      "client_type": false,
      "working_mail": [
        {
          "type": "work",
          "email": "mail@example.com"
        }
      ],
      "current_support_level": [
        "019a2f5f-9117-770d-ba20-73d528ca2155"
      ],
      "table_of_sla_indicators": {
        "rows": [
          {
            "__id": "019a2fba-b10b-7078-a983-ab7f362e4989",
            "__count": null,
            "sla_level": [
              "019a2fac-abcd-70b8-9c8f-40cfedc70ea0"
            ],
            "reaction_time_string": "2 —á–∞—Å–∞",
            "solution_time_string": "2 —á–∞—Å–∞",
            "reaction_time_seconds": 40.253,
            "solution_time_seconds": null,
            "reaction_time_string_fact": "40 —Å–µ–∫—É–Ω–¥",
            "solution_time_string_fact": "0 –º–∏–Ω—É—Ç"
          }
        ],
        "view": "",
        "result": null
      },
      "sla_level": [
        "019a2fac-abcd-70b8-9c8f-40cfedc70ea0"
      ],
      "id_portal": generateUUIDv4(), // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º ID –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏
      "aplicant": [
        "019a2f92-8bf9-737b-96e8-b218caca58c6"
      ],
      "application_text": "–°–µ–≥–æ–¥–Ω—è —É—Ç—Ä–æ–º –≤ 10:00 –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å 1–°:–ë—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—è –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –∫–≤–∞—Ä—Ç–∞–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –≤—ã–¥–∞–µ—Ç –æ—à–∏–±–∫—É '–ù–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –ø–æ –∞–¥—Ä–µ—Å—É 0x0045A19B' –∏ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è. –ü—Ä–æ–∏–∑–≤–µ–ª–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫—É –ü–ö –∏ –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –≤—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É ‚Äî –ø—Ä–æ–±–ª–µ–º–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è. –°–µ–≥–æ–¥–Ω—è –¥–æ 18:00 –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–¥–∞—Ç—å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–π –æ—Ç—á–µ—Ç –≤ –§–ù–°. –†–∞–±–æ—Ç–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø–∞—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–∞. –ü—Ä–æ—à—É —É—Å—Ç—Ä–∞–Ω–∏—Ç—å —Å–±–æ–π –≤ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.\n\n",
      "contact_information": [
        {
          "type": "other",
          "login": "kds+333@axonteam.ru"
        }
      ]
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –º–æ–¥–∞–ª–∫–∏ "–°–æ–∑–¥–∞—Ç—å" (—Ç–æ–ª—å–∫–æ –¥–ª—è admin)
  const handleOpenCreate = () => {
    if (id === 'admin') {
      setOpenCreate(true); // –û—Ç–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª–∫—É
    } else {
      alert('–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ –≤ –¥–µ–º–æ-–≤–µ—Ä—Å–∏–∏');
    }
  };

  // --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–û—Ç–ø—Ä–∞–≤–∏—Ç—å" –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ ---
  const handleSend = async () => {
    if (!description.trim()) {
      // –í–º–µ—Å—Ç–æ alert, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –º–æ–¥–∞–ª–∫–µ
      setSendResult('error');
      setSendMessage('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ.');
      return;
    }

    setIsSending(true);
    setSendResult(null); // –°–±—Ä–æ—Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–µ—Ä–µ–¥ –Ω–æ–≤–æ–π –æ—Ç–ø—Ä–∞–≤–∫–æ–π
    setSendMessage('');  // –°–±—Ä–æ—Å —Å–æ–æ–±—â–µ–Ω–∏—è

    try {
      // --- –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º UUID –∏ ticketNumber ---
      const newUUID = generateUUIDv4();
      const newTicketNumber = generateTicketNumber(newUUID);

      // –°–æ–∑–¥–∞—ë–º –∫–æ–ø–∏—é –æ–±—ä–µ–∫—Ç–∞ –∏ –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
      const requestToSend = {
        ...defaultRequestContext,
        context: {
          ...defaultRequestContext.context,
          application_text: description, // –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∏–∑ –ø–æ–ª—è "–û–ø–∏—Å–∞–Ω–∏–µ"
          id_portal: newUUID,          // –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π UUID
          __name: newTicketNumber,     // –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –Ω–æ–º–µ—Ä –∑–∞—è–≤–∫–∏
        }
      };

      console.log('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä:', requestToSend);

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä
      const serverResponse = await fetch('/api/elma/post_application', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(requestToSend),
      });

      if (!serverResponse.ok) {
        const errorText = await serverResponse.text();
        throw new Error(`–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: ${serverResponse.status} ${serverResponse.statusText}. ${errorText}`);
      }

      const serverResult = await serverResponse.json();
      console.log('‚úÖ –ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä:', serverResult);

      // –¢–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ ‚Äî —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage –ë–ï–ó –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞
      const existingApplications = JSON.parse(localStorage.getItem('applications') || '[]');
      existingApplications.push({
        ...requestToSend,
        sentAt: new Date().toISOString(), // –î–æ–±–∞–≤–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –º–µ—Ç–∫—É
        // serverResponse: serverResult, // <- –£–±–∏—Ä–∞–µ–º —ç—Ç–æ
      });
      localStorage.setItem('applications', JSON.stringify(existingApplications));

      console.log('üíæ –ó–∞—è–≤–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ localStorage (–±–µ–∑ –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞)');

      // --- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —É—Å–ø–µ—Ö–∞ ---
      setSendResult('success');
      setSendMessage('–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!');

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞—è–≤–∫–∏:', error);
      // --- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ—à–∏–±–∫–∏ ---
      setSendResult('error');
      setSendMessage('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏.');
    } finally {
      setIsSending(false);
    }
  };

  // --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å–æ–∑–¥–∞–Ω–∏—è ---
  const handleCloseCreate = () => {
    setOpenCreate(false);
    setDescription('');
    setIsSending(false);
    setSendResult(null); // –°–±—Ä–æ—Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    setSendMessage('');  // –°–±—Ä–æ—Å —Å–æ–æ–±—â–µ–Ω–∏—è
  };

  const handleSubmit = () => {
    alert('–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ –≤ –¥–µ–º–æ-–≤–µ—Ä—Å–∏–∏');
    handleCloseCreate();
  };

  // --- –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª–∫–∏ –ø–æ—Å–ª–µ —É—Å–ø–µ—Ö–∞ ---
  const handleOkAfterSuccess = () => {
    handleCloseCreate(); // –ó–∞–∫—Ä—ã–≤–∞–µ–º –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å—ë
  };

  const {
    attributes,
    listeners,
    setNodeRef,
    transform,
    transition,
    isDragging,
  } = useSortable({ id });

  const style = {
    transform: CSS.Transform.toString(transform),
    transition,
    opacity: isDragging ? 0.5 : 1,
  };

  return (
    <>
      <Card
        ref={setNodeRef}
        style={style}
        {...attributes}
        {...listeners}
        sx={{
          mb: 1.5,
          cursor: 'grab',
          borderRadius: 3,
          boxShadow: '0 4px 12px rgba(0,0,0,0.08)',
          border: '1px solid rgba(0,0,0,0.05)',
          transition: 'all 0.2s ease',
          '&:hover': {
            boxShadow: '0 6px 18px rgba(0,0,0,0.12)',
            transform: 'translateY(-2px)',
          },
        }}
      >
        <CardContent sx={{ p: 2 }}>
          <Box display="flex" justifyContent="space-between" alignItems="center">
            <Typography variant="h6" fontWeight={600} gutterBottom>
              {title}
            </Typography>
          </Box>
          <Typography variant="body2" color="text.secondary" sx={{ mt: 1 }}>
            {desc}
          </Typography>
          <Box sx={{ mt: 2, display: 'flex', gap: 1 }}>
            <Button
              onClick={handleOpenDetail}
              size="small"
              variant="outlined"
              sx={{
                borderColor: 'grey.400',
                color: 'grey.700',
                '&:hover': {
                  borderColor: 'primary.main',
                  color: 'primary.main',
                  backgroundColor: 'rgba(30, 58, 138, 0.05)',
                },
              }}
            >
              –ü–æ–¥—Ä–æ–±–Ω–µ–µ
            </Button>
            <Button
              onClick={handleOpenCreate} // ‚Üê —Ç–µ–ø–µ—Ä—å –ø—Ä–æ–≤–µ—Ä—è–µ—Ç id
              size="small"
              variant="contained"
              color="primary"
            >
              –°–æ–∑–¥–∞—Ç—å
            </Button>
          </Box>
        </CardContent>
      </Card>

      {/* === –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ "–ü–æ–¥—Ä–æ–±–Ω–µ–µ" (—Å—Ç–∞—Ä–æ–µ) === */}
      <Modal open={openDetail} onClose={handleCloseDetail}>
        <Box
          sx={{
            position: 'absolute',
            top: '50%',
            left: '50%',
            transform: 'translate(-50%, -50%)',
            width: 400,
            bgcolor: 'background.paper',
            borderRadius: 2,
            boxShadow: 24,
            p: 3,
          }}
        >
          <Typography variant="h6" fontWeight="bold">
            {title}
          </Typography>
          <Typography variant="body2" color="text.secondary" sx={{ mt: 1 }}>
            {desc}
          </Typography>
          <Typography variant="caption" sx={{ mt: 1, display: 'block' }}>
            –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {category}
          </Typography>
          <Button variant="contained" sx={{ mt: 2 }} onClick={handleCloseDetail}>
            –ó–∞–∫—Ä—ã—Ç—å
          </Button>
        </Box>
      </Modal>

      {/* === –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ "–°–æ–∑–¥–∞—Ç—å" (—Ç–æ–ª—å–∫–æ –¥–ª—è admin) === */}
      {id === 'admin' && (
        <Modal open={openCreate} onClose={handleCloseCreate}>
          <Box
            sx={{
              position: 'absolute',
              top: '50%',
              left: '50%',
              transform: 'translate(-50%, -50%)',
              width: { xs: '90%', sm: 400 }, // –ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è —à–∏—Ä–∏–Ω–∞
              bgcolor: 'background.paper',
              borderRadius: 2,
              boxShadow: 24,
              p: 3,
              maxHeight: '90vh',
              overflowY: 'auto', // –°–∫—Ä–æ–ª–ª –≤–Ω—É—Ç—Ä–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
            }}
          >
            {/* --- –£—Å–ª–æ–≤–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥: —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ —Ñ–æ—Ä–º–∞ --- */}
            {sendResult === 'success' || sendResult === 'error' ? (
              // --- –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ ---
              <Box sx={{ textAlign: 'center', py: 2 }}>
                {sendResult === 'success' ? (
                  <Box sx={{ color: 'success.main', mb: 2 }}>
                    <CheckCircleIcon sx={{ fontSize: 60, mb: 1 }} />
                    <Typography variant="h6" sx={{ fontWeight: 600 }}>
                      –£—Å–ø–µ—à–Ω–æ!
                    </Typography>
                  </Box>
                ) : (
                  <Box sx={{ color: 'error.main', mb: 2 }}>
                    <ErrorOutlineIcon sx={{ fontSize: 60, mb: 1 }} />
                    <Typography variant="h6" sx={{ fontWeight: 600 }}>
                      –û—à–∏–±–∫–∞
                    </Typography>
                  </Box>
                )}
                <Typography variant="body1" sx={{ mb: 3 }}>
                  {sendMessage}
                </Typography>
                <Button
                  variant="contained"
                  onClick={sendResult === 'success' ? handleOkAfterSuccess : handleCloseCreate}
                  sx={{
                    color: 'white',
                    backgroundColor: sendResult === 'success' ? 'success.main' : 'error.main',
                    '&:hover': {
                      backgroundColor: sendResult === 'success' ? 'success.dark' : 'error.dark',
                    },
                  }}
                >
                  OK
                </Button>
              </Box>
            ) : isSending ? (
              // --- –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ø–∏–Ω–Ω–µ—Ä–∞ –≤–æ –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏ ---
              <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', py: 4 }}>
                <CircularProgress size={40} sx={{ mb: 2 }} />
                <Typography variant="body1">–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏...</Typography>
              </Box>
            ) : (
              // --- –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã –≤–≤–æ–¥–∞ ---
              <>
                <Typography sx={{ padding: '0 0 8px 0' }} variant="h6" fontWeight={600} gutterBottom>
                  {title}
                </Typography>
                <TextField
                  label="–û–ø–∏—Å–∞–Ω–∏–µ"
                  multiline
                  rows={4}
                  fullWidth
                  value={description}
                  onChange={(e) => setDescription(e.target.value)}
                  sx={{ mb: 2 }}
                />
                <Divider sx={{ my: 2 }} />
                <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start', gap: 1 }}>
                  <Tooltip title="–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ –≤ –¥–µ–º–æ-–≤–µ—Ä—Å–∏–∏" arrow>
                    <Button
                      variant="outlined"
                      startIcon={<AttachFileIcon />}
                      onClick={handleSubmit}
                      sx={{
                        color: 'text.primary',
                        borderColor: 'grey.400',
                        '&:hover': {
                          backgroundColor: 'grey.50',
                          borderColor: 'grey.500',
                        }
                      }}
                    >
                      –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç—å
                    </Button>
                  </Tooltip>
                  <Box sx={{ display: 'flex', justifyContent: 'flex-end', gap: 1, width: '100%' }}>
                    <Button onClick={handleCloseCreate} disabled={isSending}>
                      –û—Ç–º–µ–Ω–∞
                    </Button>
                    <Button
                      variant="contained"
                      onClick={handleSend}
                      disabled={isSending || !description.trim()} // –û—Ç–∫–ª—é—á–∞–µ–º, –µ—Å–ª–∏ –ø—É—Å—Ç–æ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è
                      sx={{
                        color: 'white',
                        backgroundColor: 'primary.main',
                        '&:hover': {
                          backgroundColor: 'primary.dark',
                        }
                      }}
                    >
                      {isSending ? '–û—Ç–ø—Ä–∞–≤–∫–∞...' : '–û—Ç–ø—Ä–∞–≤–∏—Ç—å'}
                    </Button>
                  </Box>
                </Box>
              </>
            )}
          </Box>
        </Modal>
      )}
    </>
  );
};

export default ServiceCard;